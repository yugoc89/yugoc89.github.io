require.config({

	paths: {
		'classie': '/assets/js/components/classie',
		'jquery': '/assets/js/vendor/jquery-1.10.2.min',
		'underscore': '/assets/js/vendor/underscore-min',
		'backbone': '/assets/js/vendor/backbone-min',
		'TweenLite': '/assets/js/components/TweenMax.min',
		'TimelineLite':'/assets/js/components/TimelineLite.min',
		'hammer':'/assets/js/components/hammer.min',
		'jqueryHammer':'/assets/js/components/jquery.hammer'
	},

	shim: {
		'underscore': {
			exports: '_'
		},
		'backbone': {
			deps: [
				'underscore',
				'jquery'
			],
			exports: 'Backbone'
		},
		'TweenLite': {
			exports: 'TweenLite'
		}
	}
});

require([
	'classie',
	'backbone',
	'TweenLite',
	'TimelineLite',
	'hammer',
	'jqueryHammer'
], function(classie, Backbone, TweenLite, TimelineLite, Hammer) {

	'use strict';

	//--------------
	// Router
	//--------------
	$(document).on('click', '.navigation a, .navigation--sp a, .article-link', function(event) {
		event.preventDefault();
		var router = new AppRouter();
		var href = $(event.currentTarget).attr('href');
		router.navigate(href, true);
		$('.navigation li').removeClass('active');
		$(this).addClass('active');
	});

	var currentView = null;

	var AppRouter = Backbone.Router.extend({

		url: '/',

		routes: {
			'': 'homeAction',
			'works/:id': 'worksAction',
			'*works': 'singleAction',
			'*page': 'defaultAction',
		},

		initialize: function(pass){
			if (Backbone.history.fragment === undefined) {
				$('main').remove();
			}
		},
		homeAction: function( home ) {
			var restfulPageUrl = '/';
			this.switchView(restfulPageUrl, MainView);
		},
		worksAction: function( id ) {
			var restfulPageUrl = this.url + 'works/' + id;
			var path = id.split('.html')[0];
			this.switchView(restfulPageUrl, MainView, path);
		},
		singleAction: function( id, pass ) {
			var restfulPageUrl = this.url + id;
			this.switchView(restfulPageUrl, SingleView);
		},
		switchView: function(pageUrl, TargetView, categoryId) {
			var mainLoader = document.getElementById('loader');
			if (!classie.has( mainLoader, 'show') && TargetView !== SingleView) {
				classie.add( mainLoader, 'show' );
			}
			$('.footer').hide();

			var that = this;
			$.ajax({
				url: pageUrl,
				dataType: 'html',
				cache: false,
			})
			.done (function(html){
				//console.log('success!!');
				var element = $('#main', $(html));

				// alert(that.pass);

				if ($('.container').hasClass('left')) {
					ajaxAnim('-100%');
				} else if ($('.container').hasClass('right')) {
					ajaxAnim('100%');
				} else if (TargetView === SingleView) {
					ajaxAnim('-100%');
				} else {
					ajaxAnim(0);
				}

				function ajaxAnim(value){
					TweenLite.to('.container', 0.4, {
						x: value,
						opacity: 0,
						transformOrigin: 'center left',
						onComplete: function() {
							
							if (currentView) {
								currentView.remove();
							}
							$('.container').append(element);
							$('.container').removeClass('left').removeClass('right');
							window.scrollTo(0, 0);

							TweenLite.to('.container', 0.4, {
								x: '0%',
								opacity: 1,
								delay: 0.5,
								onComplete: function() {
									if (categoryId) {
										currentView = new TargetView({el:element, id: categoryId});	
									} else {
										currentView = new TargetView({el:element});
									}
									$('.footer').show();
									classie.remove( mainLoader, 'show' );
								}
							});
						}
					});
				}
			})
			.fail(function() {
				alert("error");
				classie.remove( mainLoader, 'show' );
			});
		}
	});

	//--------------
	// Models
	//--------------
	var Category = Backbone.Model.extend({
		urlRoot: '/categories/',
		url: function() {
			return this.urlRoot + '?name=' + this.id;
		},
		//urlRoot: '/data.json',
		idAttribute: 'cid',
		initialize: function(){
		},
	});

	//--------------
	// Collection
	//--------------
	var Categories = Backbone.Collection.extend({
		model: Category,
		url: function(){
			console.log(this.options.id);
			if (this.options.id) {
				return '/data/' + this.options.id + '.json';
			} else {
				return '/data/index.json';
			}
		},
		initialize: function(models, options){
			this.options = options;
		}
	});

	//--------------
	// Views
	//--------------
	var MainView = Backbone.View.extend({

		el: $('.main'),
		events: {
			'click .googleMap-link': 'mapTrigger',
		},
		initialize: function(options, categoryId) {
			console.log('home!!');
			var that = this;

			// $(window).resize(function() {
			// 	that.setSize();
			// });

			$(this.el).unbind();

			this.template = _.template($('#template--index').html());

			_.bindAll(this, 'render');
			this.collection = new Categories([], { id: this.id });

			this.collection.fetch({
				data: $.param({ id: that.id}),
				success: function (collection, response) {
					that.render(response);
				},
				error: function (errorResponse) {
					console.log(errorResponse);
				},
				complete: function(xhr, textStatus) {
					console.log(textStatus);
				}
			});
		},		
		render: function(model) {
			this.delegateEvents();			
			$('.content').html(this.template({ categories: this.collection.toJSON() }));
			this.setContentSize();
			return this;
		},
		setContentSize: function(){
			var contentWidth = $('.main').width();
			var contentHeight = $('.main').height();
			//var windowWidth = $(window).width();
			//var windowHeight = $(window).height();
			$('.container').css({
				height: contentHeight
			});
		},
	});

	var SingleView = Backbone.View.extend({
		el: $('.main'),
		events: {
			'mouseover .button--share': 'svgDraw',
			'click .button--back': 'historyBack',
			'swipeleft': 'swipeEventLeft',
			'swiperight': 'swipeEventRight',
			'tap':'tapEvent'
		},
		initialize: function(){
			console.log('single');
			$(this.el).unbind();
			_.bindAll(this, 'svgDraw');
			this.render();
		},
		render: function(){
			this.delegateEvents();
			this.$el.hammer();
			this.setContentSize();
			// var backURL = Backbone.history.getFragment();
			// $('.button--back').attr('href', backURL);
		},
		setContentSize: function(){
			var contentWidth = $('body').width();
			var contentHeight = $('body').height();
			//var windowWidth = $(window).width();
			//var windowHeight = $(window).height();
			$('body').css({
				height: contentHeight
			});
		},
		svgDraw: function(event) {
			var svg = event.target;
			// var path = event.target.querySelector('path');
			svg.getElementsByTagName('animate')[0].beginElement();
		},
		historyBack: function(event) {
			if (window.history) {
				event.preventDefault();
				window.history.back();
			}
		},
		swipeEventLeft: function(e) {
			$('.container').addClass('left');
			var router = new AppRouter();
			var href = '/works/music/work2.html';
			router.navigate(href, true);
			// if (e.gesture.direction == 'right') {
			// 	alert("You swiped right");
			// }
			// else if (e.gesture.direction == 'left') {
			// 	alert("You swiped left");
			// }
		},
		swipeEventRight: function(e) {
			$('.container').addClass('right');
			var router = new AppRouter();
			var href = '/works/music/work1.html';
			router.navigate(href, true);
		},
		tapEvent: function(e) {
			console.log('tapped');
		}
	});

	new AppRouter();
	Backbone.emulateHTTP = true;
	Backbone.emulateJSON = true;
	Backbone.history.start({pushState: true});

	//--------------
	// Global
	//--------------

	var windowWidth = $(window).width(),
		windowHeight = $(window).height();

	function navigationLine () {
		$('.navigation li a').each(function(){
			$(this).mouseover(function() {
				var distance = $(this).position().left;
				var textWidth = $(this).width();
				TweenLite.to('.navigation-border', 0.3, {
					x: distance - 0.5,
					width: textWidth
				});
			});
		});
	}
	function navigationLineInitial() {

		var url = location.pathname;
		var singles = url.split('/').slice(1)[1];

		$('.navigation li').find('a').filter(function(){
			var href =  $(this).attr('href');
			return href !== '/' && href !=='#' && top.location.pathname.indexOf( href )===0 ;
		}).addClass('active');

		if (url === '/') {
			$('.navigation li a:first-child').addClass('active');
		} else if (singles) {
			$('.navigation li').find('a').filter(function(){
				var href =  $(this).attr('href').split('/').slice(1)[1];
				return singles + '.html' === href;
			}).addClass('active');
		}

		var el = '.navigation a.active';

		var distance = $(el).position().left;
		var textWidth = $(el).width();

		TweenLite.set('.navigation-border', {
			x: distance,
			width: textWidth
		});
	}

	navigationLineInitial();
	navigationLine();
	if (windowWidth < 768) {
		navigationMenu();
	}

	// $(window).scroll(function(event) {
	// 	/* Act on the event */
	// 	var winScroll = $(window).scrollTop();
	// 	if (winScroll > 360) {
	// 		$('.navigation').addClass('fixed');
	// 	} else {
	// 		$('.navigation').removeClass('fixed');
	// 	}
	// });

	function navigationMenu() {

		function mobilecheck() {
			var check = false;
			(function(a){if(/(android|ipad|playbook|silk|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows (ce|phone)|xda|xiino/i.test(a)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(a.substr(0,4)))check = true})(navigator.userAgent||navigator.vendor||window.opera);
			return check;
		}

		var nav = document.getElementById('navigation--sp'),
			trigger = document.getElementById('navigation-trigger'),
			navInner = nav.querySelector('.navigation-inner'),
			menulink = nav.getElementsByTagName('a'),
			eventtype = mobilecheck() ? 'touchstart' : 'click';

		var overlay = document.createElement('div');
		overlay.className = 'overlay';
		document.body.appendChild( overlay );
		var resetMenu = function() {
			classie.remove(trigger, 'active');
			classie.remove(overlay, 'active');
			classie.remove(nav, 'navigation--sp--opened');
			document.body.style.overflowY = 'inherit';
		},
		closeClickFn = function () {
			resetMenu();
			overlay.removeEventListener( eventtype, closeClickFn);
		};

		trigger.addEventListener( eventtype, function(event) {
			event.preventDefault();
			var trigger = this;

			if (classie.has(this, 'active')) {
				resetMenu();
			} else {
				classie.add(this, 'active');
				classie.add(overlay, 'active');
				classie.add(nav, 'navigation--sp--opened');
				overlay.addEventListener( eventtype, closeClickFn);
				document.body.style.overflowY = 'hidden';
			}
		});

		// for (var i = menulink.length - 1; i >= 0; i--) {
		// 	menulink[i].addEventListener( eventtype, mobileClick);
		// }

		// var mobileClick = function(event) {
		// 	event.preventDefault();
		// 	resetMenu();
		// };

		$(document).on('click', '.navigation--sp a', function(event) {
			event.preventDefault();
			resetMenu();
		});
	}

	$.fn.cssHide = function(value, callback){
		var amount = (value) ? value : 0;
		TweenLite.to(this, amount, {
			css: {
				opacity: 0,
				visibility: 'hidden'
			},
			onComplete: function(){
				if (callback) {
					callback();
				}
			}
		});
		return false;
	};

	$.fn.cssShow = function(value, callback){
		var amount = (value) ? value : 0;
		TweenLite.to(this, amount, {
			css: {
				opacity: 1,
				visibility: 'inherit'
			},
			onComplete: function(){
				if (callback) {
					callback();
				}
			}
		});
		return false;
	};
});

